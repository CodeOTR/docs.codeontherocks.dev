"use strict";(self.webpackChunkcotr_guide=self.webpackChunkcotr_guide||[]).push([[4314],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>g});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),d=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=d(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},v=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=d(n),v=o,g=u["".concat(c,".").concat(v)]||u[v]||p[v]||i;return n?r.createElement(g,a(a({ref:t},s),{},{components:n})):r.createElement(g,a({ref:t},s))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=v;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:o,a[1]=l;for(var d=2;d<i;d++)a[d]=n[d];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}v.displayName="MDXCreateElement"},7936:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var r=n(7462),o=(n(7294),n(3905));const i={sidebar_position:2},a="Services",l={unversionedId:"advanced-usage/services",id:"advanced-usage/services",title:"Services",description:"The CotR classes are meant to be used at the view level but there are situations where you need a service to be accessed throughout your entire app.",source:"@site/docs/advanced-usage/services.md",sourceDirName:"advanced-usage",slug:"/advanced-usage/services",permalink:"/docs.codeontherocks.dev/docs/advanced-usage/services",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Reuse ViewModels",permalink:"/docs.codeontherocks.dev/docs/advanced-usage/reuse-models"},next:{title:"\ud83d\udd25 Efficiency Tools",permalink:"/docs.codeontherocks.dev/docs/category/-efficiency-tools"}},c={},d=[{value:"code_on_the_rocks",id:"code_on_the_rocks",level:2},{value:"ViewModel",id:"viewmodel",level:3},{value:"ViewModelBuilder",id:"viewmodelbuilder",level:3},{value:"get_it",id:"get_it",level:2},{value:"ioc_container",id:"ioc_container",level:2}],s={toc:d},u="wrapper";function p(e){let{components:t,...i}=e;return(0,o.kt)(u,(0,r.Z)({},s,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"services"},"Services"),(0,o.kt)("p",null,"The CotR classes are meant to be used at the view level but there are situations where you need a service to be accessed throughout your entire app. "),(0,o.kt)("p",null,"For example, an authentication service that manages the user's information and authentication state can be utilized by your LoginView, HomeView, and FeedView for different reasons:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Global service",src:n(334).Z,width:"1147",height:"807"})),(0,o.kt)("h2",{id:"code_on_the_rocks"},"code_on_the_rocks"),(0,o.kt)("p",null,"You can implement this design using the code_on_the_rocks package by creating a new ",(0,o.kt)("inlineCode",{parentName:"p"},"ViewModel"),"/",(0,o.kt)("inlineCode",{parentName:"p"},"ViewModelBuilder")," and placing it at the root of your app's widget tree."),(0,o.kt)("h3",{id:"viewmodel"},"ViewModel"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"class AuthenticationViewModel extends ViewModel<AuthenticationViewModel> {\n  bool loggedIn = false;\n  String? name;\n  String? email;\n\n  void setLoggedIn(bool val) {\n    setState(() => loggedIn = val);\n  }\n\n  void setName(String val) {\n    setState(() => name = val);\n  }\n\n  void setEmail(String val) {\n    setState(() => email = val);\n  }\n\n  static AuthenticationViewModel of_(BuildContext context) => getModel<AuthenticationViewModel>(context);\n}\n")),(0,o.kt)("h3",{id:"viewmodelbuilder"},"ViewModelBuilder"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"class AuthenticationViewModelBuilder extends ViewModelBuilder<AuthenticationViewModel> {\n  const AuthenticationViewModelBuilder({\n    super.key,\n    required super.builder,\n  });\n\n  @override\n  State<StatefulWidget> createState() => AuthenticationViewModel();\n}\n")),(0,o.kt)("p",null," Then you can add the new ",(0,o.kt)("inlineCode",{parentName:"p"},"ViewModelBuilder")," at the root of your app:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"class MyApp extends StatelessWidget {\n const MyApp({super.key});\n\n @override\n Widget build(BuildContext context) {\n   return MaterialApp(\n     title: 'Global Service Demo',\n     home: AuthenticationViewModelBuilder(builder: (context, model) {\n       return const HomeView();\n     }),\n   );\n }\n}\n")),(0,o.kt)("p",null,' Now, anywhere in your app you can access the AuthenticationViewModel ("service") like any other InheritedWidget:'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"AuthenticationViewModel authModel = getModel<AuthenticationViewModel>(context);\n")),(0,o.kt)("h2",{id:"get_it"},"get_it"),(0,o.kt)("h2",{id:"ioc_container"},"ioc_container"),(0,o.kt)("div",{class:"alert alert--warning",role:"alert"},"In Progress \ud83c\udfd7\ufe0f"))}p.isMDXComponent=!0},334:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/cotr_service-bf1856fb21df61c04c0a931605b45b5e.png"}}]);