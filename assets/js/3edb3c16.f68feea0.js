"use strict";(self.webpackChunkcotr_guide=self.webpackChunkcotr_guide||[]).push([[9476],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),d=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=d(n),u=i,g=p["".concat(s,".").concat(u)]||p[u]||h[u]||o;return n?r.createElement(g,a(a({ref:t},c),{},{components:n})):r.createElement(g,a({ref:t},c))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:i,a[1]=l;for(var d=2;d<o;d++)a[d]=n[d];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8629:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var r=n(7462),i=(n(7294),n(3905));const o={sidebar_position:2},a="The Flutter Widgets",l={unversionedId:"getting-started/flutter-widgets",id:"getting-started/flutter-widgets",title:"The Flutter Widgets",description:"Code on the Rocks depends on two widgets from the core Flutter framework: StatefulWidget and InheritedWidget. This section will explain how these two widgets work and why they were chosen as the backbone of this package.",source:"@site/docs/getting-started/flutter-widgets.md",sourceDirName:"getting-started",slug:"/getting-started/flutter-widgets",permalink:"/docs.codeontherocks.dev/docs/getting-started/flutter-widgets",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Why Code on the Rocks?",permalink:"/docs.codeontherocks.dev/docs/getting-started/why-cotr"},next:{title:"Installation",permalink:"/docs.codeontherocks.dev/docs/getting-started/installation"}},s={},d=[{value:"StatefulWidget",id:"statefulwidget",level:2},{value:"Notable Links",id:"notable-links",level:3},{value:"InheritedWidget",id:"inheritedwidget",level:2},{value:"Notable Links",id:"notable-links-1",level:3}],c={toc:d},p="wrapper";function h(e){let{components:t,...n}=e;return(0,i.kt)(p,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"the-flutter-widgets"},"The Flutter Widgets"),(0,i.kt)("p",null,"Code on the Rocks depends on two widgets from the core Flutter framework: StatefulWidget and InheritedWidget. This section will explain how these two widgets work and why they were chosen as the backbone of this package."),(0,i.kt)("h2",{id:"statefulwidget"},"StatefulWidget"),(0,i.kt)("p",null,"At the heart of the Flutter UI framework is the concept of state; data that changes over time. A widget can be declared to hold some state by subclassing ",(0,i.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/widgets/StatefulWidget-class.html"},"StatefulWidget"),". When this widget\u2019s state changes, the widget rebuilds its description, which the framework diffs against the previous description in order to determine the minimal changes needed in the underlying render tree to transition from one state to the next."),(0,i.kt)("p",null,"In code_on_the_rocks, the ",(0,i.kt)("inlineCode",{parentName:"p"},"ViewModelBuilder")," is a ",(0,i.kt)("inlineCode",{parentName:"p"},"StatefulWidget")," and the ",(0,i.kt)("inlineCode",{parentName:"p"},"ViewModel")," is a ",(0,i.kt)("inlineCode",{parentName:"p"},"State")," object. This allows the ",(0,i.kt)("inlineCode",{parentName:"p"},"ViewModel")," to call ",(0,i.kt)("inlineCode",{parentName:"p"},"setState")," when data changes and the ",(0,i.kt)("inlineCode",{parentName:"p"},"ViewModelBuilder")," to rebuild the UI."),(0,i.kt)("h3",{id:"notable-links"},"Notable Links"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://stackoverflow.com/questions/53363774/importance-of-calling-setstate-inside-initstate"},"https://stackoverflow.com/questions/53363774/importance-of-calling-setstate-inside-initstate"))),(0,i.kt)("h2",{id:"inheritedwidget"},"InheritedWidget"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/widgets/InheritedWidget-class.html"},"InheritedWidgets")," allow you to propagate values down the widget tree. For example, the ",(0,i.kt)("inlineCode",{parentName:"p"},"Theme")," widget is an inherited widget that propagates the current theme down the tree. When a widget uses ",(0,i.kt)("inlineCode",{parentName:"p"},"Theme.of(context)"),", it is asking for the current theme data that is closest to it in the tree."),(0,i.kt)("p",null,"In code",(0,i.kt)("em",{parentName:"p"},"on_the_rocks, the ",(0,i.kt)("inlineCode",{parentName:"em"},"ViewModel")," State object builds an InheritedWidget that propagates the ",(0,i.kt)("inlineCode",{parentName:"em"},"ViewModel")," down the tree. When a widget uses `ViewModel.of"),"(context)",(0,i.kt)("inlineCode",{parentName:"p"},", it is asking for the current "),"ViewModel` that is closest to it in the tree."),(0,i.kt)("h3",{id:"notable-links-1"},"Notable Links"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://stackoverflow.com/a/49492495/12806961"},"https://stackoverflow.com/a/49492495/12806961"))))}h.isMDXComponent=!0}}]);