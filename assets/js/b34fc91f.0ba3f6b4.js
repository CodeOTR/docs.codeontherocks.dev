"use strict";(self.webpackChunkcotr_guide=self.webpackChunkcotr_guide||[]).push([[9283],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=d(e,["components","mdxType","originalType","parentName"]),u=s(n),m=o,f=u["".concat(l,".").concat(m)]||u[m]||p[m]||a;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var d={};for(var l in t)hasOwnProperty.call(t,l)&&(d[l]=t[l]);d.originalType=e,d[u]="string"==typeof e?e:o,i[1]=d;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},433:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>d,toc:()=>s});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:2},i="Access Data",d={unversionedId:"basic-usage/accessing-data",id:"basic-usage/accessing-data",title:"Access Data",description:"There are several ways to access the ViewModel now that its added to your widget tree.",source:"@site/docs/basic-usage/2-accessing-data.md",sourceDirName:"basic-usage",slug:"/basic-usage/accessing-data",permalink:"/docs.codeontherocks.dev/docs/basic-usage/accessing-data",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Setup",permalink:"/docs.codeontherocks.dev/docs/basic-usage/setup"},next:{title:"Update Your UI",permalink:"/docs.codeontherocks.dev/docs/basic-usage/update-ui"}},l={},s=[{value:"1. Use the provided &quot;model&quot; object:",id:"1-use-the-provided-model-object",level:3},{value:"2. Use the getModel&lt;T&gt; helper function:",id:"2-use-the-getmodelt-helper-function",level:3},{value:"3. Use the ModelWidget widget:",id:"3-use-the-modelwidget-widget",level:3},{value:"4. Use the .of(context) method:",id:"4-use-the-ofcontext-method",level:3}],c={toc:s},u="wrapper";function p(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"access-data"},"Access Data"),(0,o.kt)("p",null,"There are several ways to access the ViewModel now that its added to your widget tree."),(0,o.kt)("h3",{id:"1-use-the-provided-model-object"},'1. Use the provided "model" object:'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"return Scaffold(\n      body: HomeViewModelBuilder(\n        builder: (context, model) {\n          return Text(model.title); // Add a title String to your ViewModel\n        },\n      ),\n    );\n")),(0,o.kt)("h3",{id:"2-use-the-getmodelt-helper-function"},"2. Use the getModel<T",">"," helper function:"),(0,o.kt)("p",null,"Under the hood, the getModel function uses dependOnInheritedWidgetOfExactType to get the type you specify in the generic parameter T."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"return Scaffold(\n      body: HomeViewModelBuilder(\n        builder: (context, model) {\n          return Text(getModel<HomeViewModel>(context).title); // Add a title String to your ViewModel\n        },\n      ),\n    );\n")),(0,o.kt)("h3",{id:"3-use-the-modelwidget-widget"},"3. Use the ModelWidget widget:"),(0,o.kt)("p",null,"This package includes a ",(0,o.kt)("inlineCode",{parentName:"p"},"ModelWidget")," widget. This widget is similar to a ",(0,o.kt)("inlineCode",{parentName:"p"},"Builder")," widget with the added benefit that it finds the nearest ",(0,o.kt)("inlineCode",{parentName:"p"},"ViewModel")," in the subtree and includes it in the builder function:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"ModelWidget<ScreenTwoViewModel>(\n    builder: (context, model) {\n        return Text(model.counter.value.toString());\n    },\n),\n")),(0,o.kt)("h3",{id:"4-use-the-ofcontext-method"},"4. Use the .of(context) method:"),(0,o.kt)("p",null,"Each ViewModel has a built in .of() method. This is useful if you break your widget tree up and need to access the model in a different widget:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"return Scaffold(\n      body: HomeViewModelBuilder(\n        builder: (context, model) {\n          return Text(HomeViewModel().of(context).title); // Add a title String to your ViewModel\n        },\n      ),\n    );\n")),(0,o.kt)("div",{class:"alert alert--warning",role:"alert"},"The .of(context) method only works on an instance of your ViewModel since ",(0,o.kt)("a",{href:"https://dart.dev/tools/diagnostic-messages?utm_source=dartdev&utm_medium=redir&utm_id=diagcode&utm_content=type_parameter_referenced_by_static#type_parameter_referenced_by_static"},"static members can't reference type parameters of a class.")),(0,o.kt)("br",null),'If you want to save yourself the time it takes to type the extra parenthesis, add a separate method directly in your View Model (classes can\'t have instance and static methods with the same name, hence the ".of_" vs ".of")',(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"class HomeViewModel extends ViewModel<HomeViewModel> {\n\n  // Add this\n  static HomeViewModel of_(BuildContext context) => getModel<HomeViewModel>(context);\n}\n")))}p.isMDXComponent=!0}}]);