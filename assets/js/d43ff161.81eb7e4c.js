"use strict";(self.webpackChunkcotr_guide=self.webpackChunkcotr_guide||[]).push([[8326],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(r),f=o,m=d["".concat(c,".").concat(f)]||d[f]||p[f]||a;return r?n.createElement(m,i(i({ref:t},u),{},{components:r})):n.createElement(m,i({ref:t},u))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=f;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[d]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},9273:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var n=r(7462),o=(r(7294),r(3905));const a={sidebar_position:1},i="Setup",l={unversionedId:"basic-usage/setup",id:"basic-usage/setup",title:"Setup",description:"Every screen that appears in your application will have a ViewModel and a ViewModelBuilder.",source:"@site/docs/basic-usage/setup.md",sourceDirName:"basic-usage",slug:"/basic-usage/setup",permalink:"/docs.codeontherocks.dev/docs/basic-usage/setup",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"\ud83d\udee0\ufe0f Basic Usage",permalink:"/docs.codeontherocks.dev/docs/category/\ufe0f-basic-usage"},next:{title:"Access Data",permalink:"/docs.codeontherocks.dev/docs/basic-usage/accessing-data"}},c={},s=[],u={toc:s},d="wrapper";function p(e){let{components:t,...r}=e;return(0,o.kt)(d,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"setup"},"Setup"),(0,o.kt)("p",null,"Every screen that appears in your application will have a ",(0,o.kt)("inlineCode",{parentName:"p"},"ViewModel")," and a ",(0,o.kt)("inlineCode",{parentName:"p"},"ViewModelBuilder"),"."),(0,o.kt)("p",null,"The ViewModel is a ",(0,o.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/widgets/State-class.html"},"State")," object that introduces an InheritedWidget to the widget tree. This is where your business logic will live."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"class HomeViewModel extends ViewModel<HomeViewModel> {\n  \n  // For convenience, you can add a static .of_ getter. This is optional\n  static HomeViewModel of_(BuildContext context) => getModel<HomeViewModel>(context);\n\n  // Here is where you will add your business logic and state properties\n  // Notice that you have access to setState here\n  ValueNotifier<int> counter = ValueNotifier(0);\n\n  void incrementCounter() {\n    setState(() {\n      counter.value++;\n    });\n  }\n}\n")),(0,o.kt)("p",null,"The ViewModelBuilder is a ",(0,o.kt)("a",{parentName:"p",href:"https://api.flutter.dev/flutter/widgets/StatefulWidget-class.html"},"StatefulWidget")," that you will include in your widget tree. ViewModelBuilder creates the ViewModel from above."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"}," class HomeViewModelBuilder extends ViewModelBuilder<HomeViewModel> {\n  const HomeViewModelBuilder({\n    super.key,\n    required super.builder,\n  });\n\n  // Override createState to create the specific ViewModel from above\n  @override\n  State<StatefulWidget> createState() => HomeViewModel();\n}\n")),(0,o.kt)("p",null," Once you have your ViewModel and ViewModelBuilder, add the ViewModelBuilder to your widget tree:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"return Scaffold(\n      body: HomeViewModelBuilder(\n        builder: (context, model) {\n          return Text('Test')\n        },\n      ),\n    );\n")))}p.isMDXComponent=!0}}]);